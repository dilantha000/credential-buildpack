#!/usr/bin/env bash
set -eo pipefail

BUILD_DIR=${1}
CACHE_DIR=${2}
DEPS_DIR=${3}
INDEX=${4}

BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))

echo "BUILDPACK_DIR = ${BUILDPACK_DIR}"
echo "BUILD_DIR     = ${BUILD_DIR}"
echo "CACHE_DIR     = ${CACHE_DIR}"
echo "DEPS_DIR      = ${DEPS_DIR}"
echo "INDEX         = ${INDEX}"

pushd "${CACHE_DIR}"
  curl -L -O https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz
  tar xzf OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz
  export PATH=$PWD/jdk-11.0.10+9/bin:$PATH

  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  unzip awscliv2.zip
  ./aws/install -i /tmp/aws-cli -b /tmp/bin
  export PATH=/tmp/bin:$PATH
popd

# pushd: save current dir to stack. Move to new dir.
pushd "${DEPS_DIR}/${INDEX}"

# CF API cannot be targetted from inside a customer buildpack or application environment (AC has a network level block enabled).
# CF create-service-key command is for cf marketplace services, which I am not sure if you are using or not..
# Where will the S3 credentials come from? How will the S3 bucket be managed? Are you planning to create a marketplace service?

# Environment variables for s3 Bucket - enables AWS CLI to add, download and modify files
#SERVICE_INSTANCE_NAME=my-creds-bucket
#KEY_NAME=karinz
#cf create-service-key "${SERVICE_INSTANCE_NAME}" "${KEY_NAME}"
#S3_CREDENTIALS=`cf service-key "${SERVICE_INSTANCE_NAME}" "${KEY_NAME}" | tail -n +2`

#export BUCKET_NAME=`echo "${S3_CREDENTIALS}" | jq -r .bucket`
#export AWS_ACCESS_KEY_ID=`echo "${S3_CREDENTIALS}" | jq -r .access_key_id`
#export AWS_SECRET_ACCESS_KEY=`echo "${S3_CREDENTIALS}" | jq -r .secret_key_id`
#export AWS_DEFAULT_REGION=`echo "${S3_CREDENTIALS}" | jq -r '.region'`
aws s3api list-objects --bucket text-content --query 'Contents[].{Key: Key, Size:Size}'
popd

# Create a .profile folder within the build directory
mkdir -p "${BUILD_DIR}/.profile.d"
# Create a param to reference build .profile + script
# s3_credentials.sh will be run when the app starts. Can be named whatever you want.
S3_CREDENTIALS_SCRIPT_PATH="${BUILD_DIR}/.profile.d/s3_credentials.sh"
# Make CUSTOM_KEYSTORE available as env variable when the script is run.
#echo "export CUSTOM_KEYSTORE=/deps/${INDEX}/${KEYSTORE}" > "${S3_CREDENTIALS_SCRIPT_PATH}"
echo $S3_CREDENTIALS_SCRIPT_PATH

echo $VCAP_SERVICES
# Use VCAP_SERVICES to obtain the required certificate to run the test harness

# Test we can retrieve a VCAP_SERVICE env variable
echo "Print bucket_name"
echo $VCAP_SERVICES | jq -r '.["user-provided"][0].credentials.bucket_name'